swagger: "2.0"
info:
  description: "Esta é a documentação da API do EasyMiner."
  version: "1.0.0"
  title: "EasyMinerAPI"
host: "https://easyminerapi.fly.dev"
basePath: "/api"
schemes:
  - "http"

paths:
  /auth/csrf-token:
    get:
      tags:
        - "Autenticação"
      summary: "Obter token CSRF"
      description: "Gera um token CSRF."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              csrf_token:
                type: "string"

  /auth/login:
    post:
      tags:
        - "Autenticação"
      summary: "Login de usuário"
      description: "Realiza o login de um usuário."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes do login"
          required: true
          schema:
            type: "object"
            required:
              - email
              - password
            properties:
              email:
                type: "string"
                format: "email"
                example: "usuario@exemplo.com"
                description: "Endereço de email do usuário."
                minLength: 5
                maxLength: 255
              password:
                type: "string"
                description: "Senha do usuário."
                minLength: 6
                maxLength: 20
                example: "suaSenhaSegura"
      responses:
        200:
          description: "Login bem-sucedido"
        401:
          description: "Credenciais inválidas"
        422:
          description: "Dados inválidos"

  /auth/logout:
    post:
      tags:
        - "Autenticação"
      summary: "Logout de usuário"
      description: "Realiza o logout do usuário atual."
      responses:
        200:
          description: "Logout bem-sucedido"

  /auth/me:
    get:
      tags:
        - "Autenticação"
      summary: "Obter usuário atual"
      description: "Retorna os detalhes do usuário atualmente logado."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              name:
                type: "string"
              phone_number:
                type: "string"
              email:
                type: "string"

  /users:
    get:
      tags:
        - "CRUD de Usuários"
      summary: "Obter usuários"
      description: "Retorna uma lista de todos os usuários."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
                phone_number:
                  type: "string"
                email:
                  type: "string"

    post:
      tags:
        - "CRUD de Usuários"
      summary: "Criar usuário"
      description: "Cria um novo usuário."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes do usuário"
          required: true
          schema:
            type: "object"
            required:
              - name
              - phone_number
              - email
              - password
            properties:
              name:
                type: "string"
                description: "Nome do usuário."
                minLength: 10
                maxLength: 150
                example: "João da Silva"
              phone_number:
                type: "string"
                description: "Número de telefone do usuário."
                minLength: 11
                maxLength: 20
                example: "5511987654321"
              email:
                type: "string"
                format: "email"
                description: "Endereço de email do usuário."
                minLength: 6
                maxLength: 200
                example: "usuario@exemplo.com"
              password:
                type: "string"
                description: "Senha do usuário."
                minLength: 8
                maxLength: 30
                example: "senhaSegura123"

      responses:
        201:
          description: "Usuário criado"
        422:
          description: "Dados inválidos"

  /users/{id}:
    get:
      tags:
        - "CRUD de Usuários"
      summary: "Obter usuário por ID"
      description: "Retorna os detalhes de um usuário específico."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do usuário"
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              name:
                type: "string"
              phone_number:
                type: "string"
              email:
                type: "string"
        403:
          description: "Não autorizado"
        404:
          description: "Usuário não encontrado"

    put:
      tags:
        - "CRUD de Usuários"
      summary: "Atualizar usuário por ID"
      description: "Atualiza os detalhes de um usuário específico."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do usuário"
        - in: "body"
          name: "body"
          description: "Detalhes do usuário atualizados"
          required: true
          schema:
            type: "object"
            required:
              - name
              - phone_number
              - email
            properties:
              name:
                type: "string"
                description: "Nome do usuário."
                minLength: 10
                maxLength: 150
                example: "João da Silva"
              phone_number:
                type: "string"
                description: "Número de telefone do usuário."
                minLength: 11
                maxLength: 20
                example: "5511987654321"
              email:
                type: "string"
                format: "email"
                description: "Endereço de email do usuário."
                minLength: 6
                maxLength: 200
                example: "usuario@exemplo.com"
              password:
                type: "string"
                description: "Senha do usuário."
                minLength: 8
                maxLength: 30
                example: "novaSenhaSegura123"
                nullable: true

      responses:
        200:
          description: "Usuário atualizado"
        403:
          description: "Não autorizado"
        404:
          description: "Usuário não encontrado"
        422:
          description: "Dados inválidos"

    delete:
      tags:
        - "CRUD de Usuários"
      summary: "Excluir usuário por ID"
      description: "Exclui um usuário específico."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do usuário"
      responses:
        200:
          description: "Usuário excluído"
        403:
          description: "Não autorizado"
        404:
          description: "Usuário não encontrado"

  /projects:
    get:
      tags:
        - "CRUD de Projetos"
      summary: "Obter projetos"
      description: "Retorna uma lista de todos os projetos do usuário autenticado."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
                description:
                  type: "string"
        403:
          description: "Não autorizado"
        404:
          description: "Projeto não encontrado"

    post:
      tags:
        - "CRUD de Projetos"
      summary: "Criar projeto"
      description: "Cria um novo projeto."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes do projeto"
          required: true
          schema:
            type: "object"
            required:
              - name
            properties:
              name:
                type: "string"
                description: "Nome do projeto."
                minLength: 3
                maxLength: 200
                example: "Novo Projeto"
              description:
                type: "string"
                description: "Descrição detalhada do projeto."
                minLength: 11
                maxLength: 2000
                example: "Este projeto é destinado a..."

      responses:
        201:
          description: "Projeto criado com sucesso"
        422:
          description: "Dados inválidos"

  /projects/{id}:
    get:
      tags:
        - "CRUD de Projetos"
      summary: "Obter projeto por ID"
      description: "Retorna os detalhes de um projeto específico do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do projeto"
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              name:
                type: "string"
              description:
                type: "string"
        403:
          description: "Não autorizado"
        404:
          description: "Projeto não encontrado"

    put:
      tags:
        - "CRUD de Projetos"
      summary: "Atualizar projeto por ID"
      description: "Atualiza os detalhes de um projeto específico do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do projeto"
        - in: "body"
          name: "body"
          description: "Detalhes do projeto atualizados"
          required: true
          schema:
            type: "object"
            required:
              - name
            properties:
              name:
                type: "string"
                description: "Nome do projeto."
                minLength: 3
                maxLength: 200
                example: "Projeto Atualizado"
              description:
                type: "string"
                description: "Descrição detalhada do projeto."
                minLength: 11
                maxLength: 2000
                example: "Descrição atualizada do projeto..."

      responses:
        200:
          description: "Projeto atualizado com sucesso"
        403:
          description: "Não autorizado"
        404:
          description: "Projeto não encontrado"
        422:
          description: "Dados inválidos"

    delete:
      tags:
        - "CRUD de Projetos"
      summary: "Excluir projeto por ID"
      description: "Exclui um projeto específico do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do projeto"
      responses:
        200:
          description: "Projeto excluído com sucesso"
        403:
          description: "Não autorizado"
        404:
          description: "Projeto não encontrado"

  /datasets:
    get:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Obter bases de dados"
      description: "Retorna uma lista de todas as bases de dados do usuário autenticado."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
                description:
                  type: "string"
                size_file:
                  type: "string"
                file_url:
                  type: "string"
                project_id:
                  type: "integer"
                user_id:
                  type: "integer"
        403:
          description: "Não autorizado"

    post:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Criar base de dados"
      description: "Cria uma nova base de dados."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes da base de dados"
          required: true
          schema:
            type: "object"
            required:
              - name
              - project_id
              - csv_file
            properties:
              name:
                type: "string"
                description: "Nome da base de dados."
                minLength: 3
                maxLength: 255
                example: "Dataset 1"
              description:
                type: "string"
                description: "Descrição da base de dados."
                minLength: 11
                maxLength: 2000
                example: "Descrição do dataset"
              project_id:
                type: "integer"
                description: "ID do projeto associado."
                example: 1
              csv_file:
                type: "string"
                format: "binary"
                description: "Arquivo CSV contendo os dados."
                example: "file.csv"

      responses:
        201:
          description: "Base de dados criada com sucesso"
        422:
          description: "Dados inválidos"

  /datasets/{id}:
    get:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Obter base de dados por ID"
      description: "Retorna os detalhes de uma base de dados específica do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID da base de dados"
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
              name:
                type: "string"
              description:
                type: "string"
              size_file:
                type: "string"
              file_url:
                type: "string"
              project_id:
                type: "integer"
              user_id:
                type: "integer"
        403:
          description: "Não autorizado"
        404:
          description: "Base de dados não encontrada"

    put:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Atualizar base de dados por ID"
      description: "Atualiza os detalhes de uma base de dados específica do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID da base de dados"
        - in: "body"
          name: "body"
          description: "Detalhes da base de dados atualizados"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Nome da base de dados."
                minLength: 3
                maxLength: 255
                example: "Dataset Atualizado"
              description:
                type: "string"
                description: "Descrição da base de dados."
                minLength: 11
                maxLength: 2000
                example: "Descrição atualizada do dataset"
              project_id:
                type: "integer"
                description: "ID do projeto associado."
              csv_file:
                type: "string"
                format: "binary"
                description: "Arquivo CSV atualizado contendo os dados."
                example: "novo_arquivo.csv"

      responses:
        200:
          description: "Base de dados atualizada com sucesso"
        403:
          description: "Não autorizado"
        404:
          description: "Base de dados não encontrada"
        422:
          description: "Dados inválidos"

    delete:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Excluir base de dados por ID"
      description: "Exclui uma base de dados específica do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID da base de dados"
      responses:
        200:
          description: "Base de dados excluída com sucesso"
        403:
          description: "Não autorizado"
        404:
          description: "Base de dados não encontrada"


  /preprocessing/data-cleaning/{id}:
    post:
      tags:
        - "Pré-processamento"
      summary: "Realizar limpeza de dados"
      description: >
        Realiza a limpeza de dados em um dataset específico. O usuário deve
        fornecer os métodos de limpeza a serem aplicados nas features escolhidas.
        Métodos aceitos: `media`, `mediana`, `moda`.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: "ID do dataset a ser limpo."
        - in: body
          name: body
          description: >
            Parâmetros necessários para realizar a limpeza dos dados, incluindo
            a coluna alvo, features e o método de substituição de valores faltantes.
          required: true
          schema:
            type: object
            required:
              - features
              - methods
            properties:
              features:
                type: array
                items:
                  type: string
                description: "Lista de features a serem limpas."
              methods:
                type: string
                description: "Método de limpeza a ser aplicado."
                enum:
                  - media
                  - mediana
                  - moda
      responses:
        201:
          description: "Limpeza de dados realizada com sucesso!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
        403:
          description: "Não autorizado"
          schema:
            type: object
            properties:
              mensagem:
                type: string
        404:
          description: "Base de dados não encontrada!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
        422:
          description: "Dados inválidos!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
              erros:
                type: array
                items:
                  type: string

  /preprocessing/data-normalization/{id}:
    post:
      tags:
        - "Pré-processamento"
      summary: "Realizar normalização de dados"
      description: >
        Aplica a normalização de dados em um dataset específico. O usuário deve
        fornecer os métodos de normalização a serem aplicados nas features escolhidas.
        Métodos aceitos: `minmax`, `zscore`.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: "ID do dataset a ser normalizado."
        - in: body
          name: body
          description: >
            Detalhes da normalização de dados.
          required: true
          schema:
            type: object
            required:
              - methods
              - features
            properties:
              methods:
                type: string
                description: "Método de normalização a ser aplicado."
                enum:
                  - minmax
                  - zscore
              features:
                type: array
                items:
                  type: string
                description: "Lista de features a serem normalizadas."
      responses:
        201:
          description: "Normalização de dados realizada com sucesso!"
        403:
          description: "Não autorizado"
        404:
          description: "Base de dados não encontrada!"
        422:
          description: "Dados inválidos!"

  /preprocessing/data-reduction/{id}:
    post:
      tags:
        - "Pré-processamento"
      summary: "Realizar redução de dados"
      description: >
        Aplica técnicas de redução de dados em um dataset específico. O usuário deve
        fornecer as features e o método de redução de dados a ser aplicado.
        Métodos aceitos: `pca`, `amostragem_aleatoria`, `amostragem_sistematica`.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: "ID do dataset a ser reduzido."
        - in: body
          name: body
          description: >
            Parâmetros necessários para realizar a redução de dados, incluindo
            as colunas alvo (features) e o método de redução de dados a ser aplicado.
          required: true
          schema:
            type: object
            required:
              - features
              - methods
            properties:
              features:
                type: array
                items:
                  type: string
                description: "Lista de features (colunas) para realizar a redução de dados."
                example: [ "coluna1", "coluna2" ]
              methods:
                type: string
                description: >
                  Método de redução de dados a ser aplicado.
                  Pode ser 'pca', 'amostragem_aleatoria', ou 'amostragem_sistematica'.
                example: "amostragem_sistematica"
              systematic_records:
                type: integer
                description: >
                  Número de registros a serem extraídos em uma amostragem sistemática.
                  Obrigatório se o método escolhido for 'amostragem_sistematica'.
                example: 50
              systematic_method:
                type: string
                description: >
                  Método sistemático a ser aplicado na amostragem.
                  Pode ser 'maiores' ou 'menores'.
                example: "maiores"
      responses:
        201:
          description: "Redução de dados realizada com sucesso!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Redução de dados realizada com sucesso!"
        403:
          description: "Não autorizado"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Não autorizado!"
        404:
          description: "Base de dados não encontrada!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Base de dados não encontrada!"
        422:
          description: "Dados inválidos!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Dados inválidos!"
              erros:
                type: object
                properties:
                  features:
                    type: array
                    items:
                      type: string
                    example: [
                      "O campo enviado não está registrado na sua base de dados."
                    ]
