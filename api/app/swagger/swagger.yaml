swagger: "2.0"
info:
  description: "Esta é a documentação da API do EasyMiner."
  version: "1.0.0"
  title: "EasyMinerAPI"
host: "easyminerapi.fly.dev"
basePath: "/api"
schemes:
  - "https"

paths:
  /auth/csrf-token:
    get:
      tags:
        - "Autenticação"
      summary: "Obter token CSRF"
      description: "Gera e retorna um token CSRF para proteger formulários contra ataques CSRF."
      responses:
        200:
          description: "Token CSRF gerado com sucesso."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Token CSRF gerado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  csrf_token:
                    type: "string"
                    example: "abc123csrfToken"

  /auth/login:
    post:
      tags:
        - "Autenticação"
      summary: "Login de usuário"
      description: "Autentica um usuário com base no email e senha fornecidos."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes do login, incluindo email e senha."
          required: true
          schema:
            type: "object"
            required:
              - email
              - password
            properties:
              email:
                type: "string"
                format: "email"
                example: "usuario@exemplo.com"
                description: "Endereço de email do usuário."
              password:
                type: "string"
                description: "Senha do usuário."
                example: "senha123"
      responses:
        200:
          description: "Login bem-sucedido."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Login realizado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "null"
                example: null

        401:
          description: "Credenciais inválidas."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Credenciais inválidas!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        422:
          description: "Dados inválidos."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example: { "email": [ "Campo obrigatório." ], "password": [ "Campo obrigatório." ] }

  /auth/logout:
    post:
      tags:
        - "Autenticação"
      summary: "Logout de usuário"
      description: "Realiza o logout do usuário atualmente autenticado."
      responses:
        200:
          description: "Logout bem-sucedido."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Logout realizado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "null"
                example: null

  /auth/me:
    get:
      tags:
        - "Autenticação"
      summary: "Obter usuário atual"
      description: "Retorna os detalhes do usuário autenticado atualmente."
      responses:
        200:
          description: "Operação bem-sucedida."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Usuário atual recuperado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 1
                  name:
                    type: "string"
                    example: "João Silva"
                  phone_number:
                    type: "string"
                    example: "+55 11 98765-4321"
                  email:
                    type: "string"
                    example: "joao.silva@exemplo.com"
        403:
          description: "Não autorizado."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Não autorizado!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null

  /users:
    post:
      tags:
        - "CRUD de Usuários"
      summary: "Criar usuário"
      description: "Cria um novo usuário."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes do usuário"
          required: true
          schema:
            type: "object"
            required:
              - name
              - phone_number
              - email
              - password
            properties:
              name:
                type: "string"
                description: "Nome do usuário."
                minLength: 10
                maxLength: 150
                example: "João da Silva"
              phone_number:
                type: "string"
                description: "Número de telefone do usuário."
                minLength: 11
                maxLength: 20
                example: "5511987654321"
              email:
                type: "string"
                format: "email"
                description: "Endereço de email do usuário."
                minLength: 6
                maxLength: 200
                example: "usuario@exemplo.com"
              password:
                type: "string"
                description: "Senha do usuário."
                minLength: 8
                maxLength: 30
                example: "senhaSegura123"

      responses:
        201:
          description: "Usuário criado com sucesso."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Usuário criado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 1
                  name:
                    type: "string"
                    example: "João da Silva"
                  phone_number:
                    type: "string"
                    example: "5511987654321"
                  email:
                    type: "string"
                    example: "usuario@exemplo.com"
        422:
          description: "Dados inválidos."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example:
                  name: [ "O tamanho deve estar entre 10 e 150 caracteres." ]
                  email: [ "Por favor, insira um endereço de email válido." ]
    put:
      tags:
        - "CRUD de Usuários"
      summary: "Atualizar usuário por ID"
      description: "Atualiza os detalhes de um usuário específico."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do usuário"
        - in: "body"
          name: "body"
          description: "Detalhes do usuário atualizados"
          required: true
          schema:
            type: "object"
            required:
              - name
              - phone_number
              - email
            properties:
              name:
                type: "string"
                description: "Nome do usuário."
                minLength: 10
                maxLength: 150
                example: "João da Silva"
              phone_number:
                type: "string"
                description: "Número de telefone do usuário."
                minLength: 11
                maxLength: 20
                example: "5511987654321"
              email:
                type: "string"
                format: "email"
                description: "Endereço de email do usuário."
                minLength: 6
                maxLength: 200
                example: "usuario@exemplo.com"
              password:
                type: "string"
                description: "Senha do usuário."
                minLength: 8
                maxLength: 30
                example: "novaSenhaSegura123"

      responses:
        200:
          description: "Usuário atualizado com sucesso."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Usuário atualizado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 1
                  name:
                    type: "string"
                    example: "João da Silva"
                  phone_number:
                    type: "string"
                    example: "5511987654321"
                  email:
                    type: "string"
                    example: "usuario@exemplo.com"
        422:
          description: "Dados inválidos."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example:
                  phone_number: [ "O número de telefone deve ter entre 11 e 20 dígitos." ]
                  password: [ "A senha deve ter entre 8 e 30 caracteres." ]

        404:
          description: "Usuário não encontrado."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Usuário não encontrado!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
    delete:
      tags:
        - "CRUD de Usuários"
      summary: "Excluir usuário por ID"
      description: "Exclui um usuário específico."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do usuário"
      responses:
        200:
          description: "Usuário excluído com sucesso."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Usuário deletado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 1
                  name:
                    type: "string"
                    example: "João da Silva"
                  phone_number:
                    type: "string"
                    example: "5511987654321"
                  email:
                    type: "string"
                    example: "usuario@exemplo.com"
        404:
          description: "Usuário não encontrado."
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Usuário não encontrado!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null


  /projects:
    get:
      tags:
        - "CRUD de Projetos"
      summary: "Obter projetos"
      description: "Retorna uma lista de todos os projetos do usuário autenticado."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projetos recuperados com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 290
                    name:
                      type: "string"
                      example: "Projeto para predição no setor de creditos"
                    description:
                      type: "string"
                      example: "Este projeto é destinado a realizar o processo de KDD em 3 bases de dados no setor de créditos"
                    datasets:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          id:
                            type: "integer"
                            example: 40
                          name:
                            type: "string"
                            example: "Dataset teste"
                          description:
                            type: "string"
                            example: "Descrição do dataset teste"
                          file_url:
                            type: "string"
                            example: "https://s3.amazonaws.com/bucket-easyminer/datasets/5/file"
                          size_file:
                            type: "string"
                            example: "0.0037MB"
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Não autorizado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
    post:
      tags:
        - "CRUD de Projetos"
      summary: "Criar projeto"
      description: "Cria um novo projeto."
      parameters:
        - in: "body"
          name: "body"
          description: "Detalhes do projeto"
          required: true
          schema:
            type: "object"
            required:
              - name
            properties:
              name:
                type: "string"
                description: "Nome do projeto."
                minLength: 2
                maxLength: 100
                example: "Projeto financeiro"
              description:
                type: "string"
                description: "Descrição detalhada do projeto."
                minLength: 10
                maxLength: 2000
                example: "Este projeto é destinado a realizar o processo de KDD em 5 bases de dados no setor de finanças"
      responses:
        201:
          description: "Projeto criado com sucesso"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto criado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 289
                  name:
                    type: "string"
                    example: "Projeto para predição de doenças"
                  description:
                    type: "string"
                    example: "Este projeto é destinado a realizar o processo de KDD em 3 bases de dados no setor de saúde"
        422:
          description: "Dados inválidos"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example:
                  name: "O nome do projeto já existe."

  /projects/{id}:
    get:
      tags:
        - "CRUD de Projetos"
      summary: "Obter projeto por ID"
      description: "Retorna os detalhes de um projeto específico do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do projeto"
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto recuperado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 540
                    name:
                      type: "string"
                      example: "Projeto para predição no setor de creditos"
                    description:
                      type: "string"
                      example: "Este projeto é destinado a realizar o processo de KDD em 3 bases de dados no setor de créditos"
                    datasets:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          id:
                            type: "integer"
                            example: 92
                          name:
                            type: "string"
                            example: "Dataset teste 2"
                          description:
                            type: "string"
                            example: "Descrição do dataset teste 2"
                          file_url:
                            type: "string"
                            example: "https://s3.amazonaws.com/bucket-easyminer/datasets/92/file"
                          size_file:
                            type: "string"
                            example: "0.29MB"

        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Não autorizado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        404:
          description: "Projeto não encontrado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto não encontrado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null

    put:
      tags:
        - "CRUD de Projetos"
      summary: "Atualizar projeto por ID"
      description: "Atualiza os detalhes de um projeto específico do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do projeto"
        - in: "body"
          name: "body"
          description: "Detalhes do projeto atualizados"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Nome do projeto."
                minLength: 2
                maxLength: 100
                example: "Projeto Atualizado"
              description:
                type: "string"
                description: "Descrição detalhada do projeto."
                minLength: 10
                maxLength: 2000
                example: "Descrição atualizada do projeto..."
      responses:
        200:
          description: "Projeto atualizado com sucesso"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto atualizado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                  name:
                    type: "string"
                    example: "Nome atualizado"
                  description:
                    type: "string"
                    example: "Descrição atualizada"
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Não autorizado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        404:
          description: "Projeto não encontrado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto não encontrado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        422:
          description: "Dados inválidos"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example:
                  description: "Tamanho deve estar entre 11 e 2000 caracteres."


    delete:
      tags:
        - "CRUD de Projetos"
      summary: "Excluir projeto por ID"
      description: "Exclui um projeto específico do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID do projeto"
      responses:
        200:
          description: "Projeto excluído com sucesso"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto deletado com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 5
                  name:
                    type: "string"
                    example: "Projeto numero 5"
                  description:
                    type: "string"
                    example: "Descrição do projeto numero 5"
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Não autorizado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        404:
          description: "Projeto não encontrado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Projeto não encontrado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null


  /datasets:
    get:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Obter bases de dados"
      description: "Retorna uma lista de todas as bases de dados do usuário autenticado."
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Bases de dados recuperadas com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 5
                    name:
                      type: "string"
                      example: "Base de dados 1"
                    description:
                      type: "string"
                      example: "Descrição da base de dados"
                    size_file:
                      type: "string"
                      example: "1.2 MB"
                    file_url:
                      type: "string"
                      example: "https://s3.amazonaws.com/bucket-easyminer/datasets/5/file"
                    project_id:
                      type: "integer"
                      example: 1
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Não autorizado."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null

    post:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Criar base de dados"
      description: "Cria uma nova base de dados."
      consumes:
        - "multipart/form-data"
      parameters:
        - in: "formData"
          name: "name"
          type: "string"
          description: "Nome da base de dados."
          required: true
          minLength: 3
          maxLength: 255
          x-example: "Dataset 1"
        - in: "formData"
          name: "description"
          type: "string"
          description: "Descrição da base de dados."
          minLength: 11
          maxLength: 2000
          x-example: "Descrição do dataset"
        - in: "formData"
          name: "project_id"
          type: "integer"
          description: "ID do projeto associado."
          required: true
          x-example: 1
        - in: "formData"
          name: "csv_file"
          type: "file"
          description: "Arquivo CSV contendo os dados."
          required: true
      responses:
        201:
          description: "Base de dados criada com sucesso"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados criada com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 5
                  name:
                    type: "string"
                    example: "Base de dados 1"
                  description:
                    type: "string"
                    example: "Descrição da base de dados"
                  size_file:
                    type: "string"
                    example: "0.25 MB"
                  file_url:
                    type: "string"
                    example: "https://s3.amazonaws.com/bucket-easyminer/datasets/5/file"
        422:
          description: "Dados inválidos"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example:
                  csv_file:  "Apenas arquivos CSV são permitidos."
                  name: "O nome da base de dados já existe."
  /datasets/{id}:
    get:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Obter base de dados por ID"
      description: "Retorna os detalhes de uma base de dados específica do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID da base de dados"
      responses:
        200:
          description: "Operação bem-sucedida"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados recuperada com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 2
                  name:
                    type: "string"
                    example: "Base de dados 1"
                  description:
                    type: "string"
                    example: "Descrição da base de dados"
                  size_file:
                    type: "string"
                    example: "1.2 MB"
                  file_url:
                    type: "string"
                    example: "https://s3.amazonaws.com/bucket-easyminer/datasets/2/file"
                  project_id:
                    type: "integer"
                    example: 1
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Você não tem permissão para acessar essa base de dados."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        404:
          description: "Base de dados não encontrada"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados não encontrada!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null

    put:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Atualizar base de dados por ID"
      description: "Atualiza os detalhes de uma base de dados específica do usuário autenticado."
      consumes:
        - "multipart/form-data"
      parameters:
        - in: "formData"
          name: "name"
          type: "string"
          description: "Nome da base de dados."
          minLength: 3
          maxLength: 255
          x-example: "Dataset Atualizado"
        - in: "formData"
          name: "description"
          type: "string"
          description: "Descrição da base de dados."
          minLength: 11
          maxLength: 2000
          x-example: "Descrição atualizada do dataset"
        - in: "formData"
          name: "project_id"
          type: "integer"
          description: "ID do projeto associado."
          x-example: 1
        - in: "formData"
          name: "csv_file"
          type: "file"
          description: "Arquivo CSV atualizado contendo os dados."

      responses:
        200:
          description: "Base de dados atualizada com sucesso"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados atualizada com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 3
                  name:
                    type: "string"
                    example: "Base de dados 3"
                  description:
                    type: "string"
                    example: "Descrição da base de dados"
                  size_file:
                    type: "string"
                    example: "1.3 MB"
                  file_url:
                    type: "string"
                    example: "https://s3.amazonaws.com/bucket-easyminer/datasets/3/file"
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Você não tem permissão para acessar essa base de dados."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        404:
          description: "Base de dados não encontrada"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados não encontrada!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        422:
          description: "Dados inválidos"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dados inválidos!"
              success:
                type: "boolean"
                example: false
              data:
                type: "object"
                example:
                  description: "O tamanho deve estar entre 11 e 2000 caracteres."
                  project_id: "O projeto não existe."

    delete:
      tags:
        - "CRUD de Bases de Dados"
      summary: "Excluir base de dados por ID"
      description: "Exclui uma base de dados específica do usuário autenticado."
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID da base de dados"
      responses:
        200:
          description: "Base de dados excluída com sucesso"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados deletada com sucesso!"
              success:
                type: "boolean"
                example: true
              data:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 15
                  name:
                    type: "string"
                    example: "Base de dados 15"
                  description:
                    type: "string"
                    example: "Descrição da base de dados"
                  size_file:
                    type: "string"
                    example: "0.89 MB"
                  file_url:
                    type: "string"
                    example: "https://s3.amazonaws.com/bucket-easyminer/datasets/15/file"
        403:
          description: "Não autorizado"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Você não tem permissão para acessar essa base de dados."
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null
        404:
          description: "Base de dados não encontrada"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Base de dados não encontrada!"
              success:
                type: "boolean"
                example: false
              data:
                type: "null"
                example: null

  /preprocessing/data-cleaning/{id}:
    post:
      tags:
        - "Pré-processamento"
      summary: "Realizar limpeza de dados"
      description: >
        Realiza a limpeza de dados em um dataset específico. O usuário deve
        fornecer os métodos de limpeza a serem aplicados nas features escolhidas,
        assim como os valores faltantes a serem substituídos.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: "ID do dataset a ser limpo."
        - in: body
          name: body
          description: >
            Parâmetros necessários para realizar a limpeza dos dados, incluindo
            a coluna alvo, features, o método de substituição de valores faltantes e os valores faltantes.
          required: true
          schema:
            type: object
            required:
              - features
              - methods
              - missing_values
            properties:
              features:
                type: array
                items:
                  type: string
                description: "Lista de features a serem limpas."
                example: [
                  "COLUNA 1",
                  "COLUNA 2"
                ]
              methods:
                type: string
                description: "Método de limpeza a ser aplicado."
                enum:
                  - media
                  - mediana
                  - moda
                example: "media"
              missing_values:
                type: array
                items:
                  type: string
                  enum:
                    - "0"
                    - "null"
                    - ""
                    - "?"
                description: "Valores a serem substituídos."
                example: [
                  "0",
                  "?"
                ]
      responses:
        200:
          description: "Limpeza de dados realizada com sucesso!"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Limpeza de dados realizada com sucesso!"
              success:
                type: boolean
                example: true
              data:
                type: string
                example: None
        403:
          description: "Não autorizado"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Não autorizado"
              success:
                type: boolean
                example: False
              data:
                type: string
                example: None
        404:
          description: "Base de dados não encontrada!"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Base de dados não encontrada!"
              success:
                type: boolean
                example: False
              data:
                type: string
                example: None
        422:
          description: "Dados inválidos!"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Dados inválidos!"
              success:
                type: boolean
                example: False
              data:
                type: array
                items:
                  type: string
                  example: "Os seguintes campos não estão registrados na sua base de dados: COLUNA 1, COLUNA 2"

  /preprocessing/data-normalization/{id}:
    post:
      tags:
        - "Pré-processamento"
      summary: "Realizar normalização de dados"
      description: >
        Aplica a normalização de dados em um dataset específico. O usuário deve
        fornecer os métodos de normalização a serem aplicados nas features escolhidas.
        Métodos aceitos: `minmax`, `zscore`.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: "ID do dataset a ser normalizado."
        - in: body
          name: body
          description: >
            Detalhes da normalização de dados.
          required: true
          schema:
            type: object
            required:
              - methods
              - features
            properties:
              methods:
                type: string
                description: "Método de normalização a ser aplicado."
                enum:
                  - minmax
                  - zscore
              features:
                type: array
                items:
                  type: string
                description: "Lista de features a serem normalizadas."
      responses:
        201:
          description: "Normalização de dados realizada com sucesso!"
        403:
          description: "Não autorizado"
        404:
          description: "Base de dados não encontrada!"
        422:
          description: "Dados inválidos!"

  /preprocessing/data-reduction/{id}:
    post:
      tags:
        - "Pré-processamento"
      summary: "Realizar redução de dados"
      description: >
        Aplica técnicas de redução de dados em um dataset específico. O usuário deve
        fornecer as features e o método de redução de dados a ser aplicado.
        Métodos aceitos: `pca`, `amostragem_aleatoria`, `amostragem_sistematica`.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: "ID do dataset a ser reduzido."
        - in: body
          name: body
          description: >
            Parâmetros necessários para realizar a redução de dados, incluindo
            as colunas alvo (features) e o método de redução de dados a ser aplicado.
          required: true
          schema:
            type: object
            required:
              - features
              - methods
            properties:
              features:
                type: array
                items:
                  type: string
                description: "Lista de features (colunas) para realizar a redução de dados."
                example: [ "coluna1", "coluna2" ]
              methods:
                type: string
                description: >
                  Método de redução de dados a ser aplicado.
                  Pode ser 'pca', 'amostragem_aleatoria', ou 'amostragem_sistematica'.
                example: "amostragem_sistematica"
              systematic_records:
                type: integer
                description: >
                  Número de registros a serem extraídos em uma amostragem sistemática.
                  Obrigatório se o método escolhido for 'amostragem_sistematica'.
                example: 50
              systematic_method:
                type: string
                description: >
                  Método sistemático a ser aplicado na amostragem.
                  Pode ser 'maiores' ou 'menores'.
                example: "maiores"
      responses:
        201:
          description: "Redução de dados realizada com sucesso!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Redução de dados realizada com sucesso!"
        403:
          description: "Não autorizado"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Não autorizado!"
        404:
          description: "Base de dados não encontrada!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Base de dados não encontrada!"
        422:
          description: "Dados inválidos!"
          schema:
            type: object
            properties:
              mensagem:
                type: string
                example: "Dados inválidos!"
              erros:
                type: object
                properties:
                  features:
                    type: array
                    items:
                      type: string
                    example: [
                      "O campo enviado não está registrado na sua base de dados."
                    ]